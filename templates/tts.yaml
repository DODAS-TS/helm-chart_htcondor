kind: Service
apiVersion: v1
metadata:
  name: tts-svc
spec:
  type: NodePort
  selector:
    app: tts
  ports:
  - protocol: TCP
    name: tts
    port: 8080
    targetPort: 80
    nodePort: {{ .Values.PROXY_CACHE_Port }}

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: tts-pod
  labels:
    app: tts
spec:
  template:
    metadata:
      labels:
        app: tts
    spec: 
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
            - matchExpressions:
              - key: condor
                operator: NotIn
                values:
                - ccb
                - schedd
      containers: 
      - name: tts-cache
        imagePullPolicy: Always
        env: 
        - name: IAM_TOKEN
          value:  "{{ .Values.IAM_TOKEN }}"
        - name: IAM_CLIENT_ID
          value: "{{ .Values.IAM_CLIENT_ID}}"
        - name: IAM_CLIENT_SECRET
          value: "{{ .Values.IAM_CLIENT_SECRET}}"
        - name: PROXY_AUDIENCE
          value:  "{{ .Values.PROXY_AUDIENCE}}"
        - name: PROXY_TTS
          value: "{{ .Values.PROXY_TTS}}"
        - name: PROXY_IAM_ENDPOINT
          value:  "{{ .Values.PROXY_IAM_ENDPOINT}}"
        - name: PROXY_CREDENTIAL_ENDPOINT
          value: "{{ .Values.PROXY_CREDENTIAL_ENDPOINT}}"
        - name: PROXY_LOCAL_CACHE_EXPIRATION_TIME
          value: "86400"
        - name: PROXY_LOCK_FILE_AGE
          value: "20"
        - name: PROXY_CACHE_DIR
          value: "/tmp"
        image:  "{{ .Values.tts_image}}"
  selector:
    matchLabels:
      app: tts 

  replicas: 1
