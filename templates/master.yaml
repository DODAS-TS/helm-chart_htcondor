apiVersion: apps/v1
kind: Deployment
metadata:
  name: ccb-pod
  labels:
    app: ccb
spec:
  template:
    metadata:
      labels:
        app: ccb
    spec:
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
            - matchExpressions:
              - key: condor
                operator: In
                values:
                - ccb
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
          - labelSelector:
              matchExpressions:
              - key: app
                operator: In
                values:
                - ccb 
            topologyKey: kubernetes.io/hostname 
      hostNetwork: true
      containers:
      - name: ccb
        imagePullPolicy: Always
        args:
        - master 
        env:
        - name: CONDOR_HOST 
          value:   "{{ .Values.CONDOR_HOST }}"
        - name: PROXY_CACHE 
          value: "{{ .Values.PROXY_CACHE }}:{{ .Values.PROXY_CACHE_Port }}"

        image: "{{ .Values.condor_image }}"
#        livenessProbe:
#          exec:
#            command:
#            - curl
#            - -f
#            - http://localhost:8080/check_health
  selector:
    matchLabels:
      app: ccb 

  replicas: 1


# {{- if .Values.ingress.enabled -}}
# {{- $fullName := include "htcondor.fullname" . -}}
# apiVersion: extensions/v1beta1
# kind: Ingress
# metadata:
#   name: {{ $fullName }}
#   labels:
# {{ include "htcondor.labels" . | indent 4 }}
#   {{- with .Values.ingress.annotations }}
#   annotations:
#     {{- toYaml . | nindent 4 }}
#   {{- end }}
# spec:
# {{- if .Values.ingress.tls }}
#   tls:
#   {{- range .Values.ingress.tls }}
#     - hosts:
#       {{- range .hosts }}
#         - {{ . | quote }}
#       {{- end }}
#       secretName: {{ .secretName }}
#   {{- end }}
# {{- end }}
#   rules:
#   {{- range .Values.ingress.hosts }}
#     - host: {{ .host | quote }}
#       http:
#         paths:
#         {{- range .paths }}
#           - path: {{ . }}
#             backend:
#               serviceName: {{ $fullName }}
#               servicePort: http
#         {{- end }}
#   {{- end }}
# {{- end }}

# apiVersion: apps/v1
# kind: Deployment
# metadata:
#   name: {{ include "htcondor.fullname" . }}
#   labels:
# {{ include "htcondor.labels" . | indent 4 }}
# spec:
#   replicas: {{ .Values.replicaCount }}
#   selector:
#     matchLabels:
#       app.kubernetes.io/name: {{ include "htcondor.name" . }}
#       app.kubernetes.io/instance: {{ .Release.Name }}
#   template:
#     metadata:
#       labels:
#         app.kubernetes.io/name: {{ include "htcondor.name" . }}
#         app.kubernetes.io/instance: {{ .Release.Name }}
#     spec:
#     {{- with .Values.imagePullSecrets }}
#       imagePullSecrets:
#         {{- toYaml . | nindent 8 }}
#     {{- end }}
#       containers:
#         - name: {{ .Chart.Name }}
#           image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
#           imagePullPolicy: {{ .Values.image.pullPolicy }}
#           ports:
#             - name: http
#               containerPort: 80
#               protocol: TCP
#           livenessProbe:
#             httpGet:
#               path: /
#               port: http
#           readinessProbe:
#             httpGet:
#               path: /
#               port: http
#           resources:
#             {{- toYaml .Values.resources | nindent 12 }}
#       {{- with .Values.nodeSelector }}
#       nodeSelector:
#         {{- toYaml . | nindent 8 }}
#       {{- end }}
#     {{- with .Values.affinity }}
#       affinity:
#         {{- toYaml . | nindent 8 }}
#     {{- end }}
#     {{- with .Values.tolerations }}
#       tolerations:
#         {{- toYaml . | nindent 8 }}
#     {{- end }}
